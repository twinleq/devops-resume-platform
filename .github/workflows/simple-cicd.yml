name: Simple CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Code Quality Check
  code-quality:
    name: Code Quality Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check HTML syntax
      run: |
        echo "Checking HTML syntax..."
        # Simple HTML validation
        if grep -q "<!DOCTYPE html>" app/src/index.html; then
          echo "✅ HTML DOCTYPE found"
        else
          echo "❌ HTML DOCTYPE missing"
          exit 1
        fi

    - name: Check CSS syntax
      run: |
        echo "Checking CSS syntax..."
        # Simple CSS validation
        if grep -q "body" app/src/styles.css; then
          echo "✅ CSS body selector found"
        else
          echo "❌ CSS body selector missing"
          exit 1
        fi

    - name: Check JavaScript syntax
      run: |
        echo "Checking JavaScript syntax..."
        # Simple JS validation
        if grep -q "class" app/src/script.js; then
          echo "✅ JavaScript classes found"
        else
          echo "❌ JavaScript classes missing"
          exit 1
        fi

    - name: Check Docker files
      run: |
        echo "Checking Docker files..."
        if [ -f "app/Dockerfile" ]; then
          echo "✅ App Dockerfile found"
        fi
        if [ -f "backend/Dockerfile" ]; then
          echo "✅ Backend Dockerfile found"
        fi

  # Backend Dependencies Check
  backend-check:
    name: Backend Dependencies Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install backend dependencies
      run: |
        cd backend
        npm ci

    - name: Check backend dependencies
      run: |
        cd backend
        npm audit --audit-level moderate

  # Build Test
  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    needs: [code-quality, backend-check]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build backend image
      run: |
        cd backend
        docker build -t devops-resume-backend:test .

    - name: Build frontend image
      run: |
        cd app
        docker build -t devops-resume-frontend:test .

    - name: Test docker-compose build
      run: |
        docker-compose -f docker-compose-full.yml config

  # Security Scan (Simplified)
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build image for scanning
      run: |
        cd backend
        docker build -t devops-resume-backend:security-scan .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'devops-resume-backend:security-scan'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'

  # Deployment Status Check
  deployment-check:
    name: Deployment Status Check
    runs-on: ubuntu-latest
    needs: security-scan
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check if site is accessible
      run: |
        echo "Checking if site is accessible..."
        # Simple check - just verify the domain resolves
        if nslookup romadanovsky.ru > /dev/null 2>&1; then
          echo "✅ Domain romadanovsky.ru resolves"
        else
          echo "⚠️ Domain romadanovsky.ru does not resolve"
        fi

    - name: Deployment Summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Code quality checks passed" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Backend dependencies checked" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Docker images built successfully" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Security scan completed" >> $GITHUB_STEP_SUMMARY
        echo "- 🌐 Site: https://romadanovsky.ru" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 Grafana: https://romadanovsky.ru:3000" >> $GITHUB_STEP_SUMMARY
        echo "- 📈 Prometheus: https://romadanovsky.ru:9090" >> $GITHUB_STEP_SUMMARY
